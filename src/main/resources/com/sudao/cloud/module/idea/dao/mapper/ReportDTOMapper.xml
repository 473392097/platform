<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sudao.cloud.module.idea.dao.mapper.ReportDTOMapper">
  <resultMap id="BaseResultMap" type="com.sudao.cloud.module.idea.dao.dto.ReportDTO">
    <id column="report_id" jdbcType="BIGINT" property="reportId" />
    <result column="relation_id" jdbcType="BIGINT" property="relationId" />
    <result column="relation_type" jdbcType="BIT" property="relationType" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="report_version" jdbcType="VARCHAR" property="reportVersion" />
    <result column="report_user_phone" jdbcType="VARCHAR" property="reportUserPhone" />
    <result column="be_reported_name" jdbcType="VARCHAR" property="beReportedName" />
    <result column="process_status" jdbcType="VARCHAR" property="processStatus" />
    <result column="display_order" jdbcType="INTEGER" property="displayOrder" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    report_id, relation_id, relation_type, parent_id, title, reason, report_version, 
    report_user_phone, be_reported_name, process_status, display_order, version, status, 
    create_user_id, create_user_name, create_time, update_user_id, update_user_name, 
    update_time, last_update
  </sql>
  <select id="selectByExample" parameterType="com.sudao.cloud.module.idea.dao.dto.ReportDTOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cloud_component_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cloud_component_report
    where report_id = #{reportId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cloud_component_report
    where report_id = #{reportId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sudao.cloud.module.idea.dao.dto.ReportDTOExample">
    delete from cloud_component_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sudao.cloud.module.idea.dao.dto.ReportDTO">
    insert into cloud_component_report (report_id, relation_id, relation_type, 
      parent_id, title, reason, 
      report_version, report_user_phone, be_reported_name, 
      process_status, display_order, version, 
      status, create_user_id, create_user_name, 
      create_time, update_user_id, update_user_name, 
      update_time, last_update)
    values (#{reportId,jdbcType=BIGINT}, #{relationId,jdbcType=BIGINT}, #{relationType,jdbcType=BIT}, 
      #{parentId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{reportVersion,jdbcType=VARCHAR}, #{reportUserPhone,jdbcType=VARCHAR}, #{beReportedName,jdbcType=VARCHAR}, 
      #{processStatus,jdbcType=VARCHAR}, #{displayOrder,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createUserId,jdbcType=BIGINT}, #{createUserName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{updateUserName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{lastUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sudao.cloud.module.idea.dao.dto.ReportDTO">
    insert into cloud_component_report
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reportId != null">
        report_id,
      </if>
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="relationType != null">
        relation_type,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="reportVersion != null">
        report_version,
      </if>
      <if test="reportUserPhone != null">
        report_user_phone,
      </if>
      <if test="beReportedName != null">
        be_reported_name,
      </if>
      <if test="processStatus != null">
        process_status,
      </if>
      <if test="displayOrder != null">
        display_order,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateUserName != null">
        update_user_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="lastUpdate != null">
        last_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reportId != null">
        #{reportId,jdbcType=BIGINT},
      </if>
      <if test="relationId != null">
        #{relationId,jdbcType=BIGINT},
      </if>
      <if test="relationType != null">
        #{relationType,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="reportVersion != null">
        #{reportVersion,jdbcType=VARCHAR},
      </if>
      <if test="reportUserPhone != null">
        #{reportUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="beReportedName != null">
        #{beReportedName,jdbcType=VARCHAR},
      </if>
      <if test="processStatus != null">
        #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="displayOrder != null">
        #{displayOrder,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserName != null">
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sudao.cloud.module.idea.dao.dto.ReportDTOExample" resultType="java.lang.Long">
    select count(*) from cloud_component_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cloud_component_report
    <set>
      <if test="record.reportId != null">
        report_id = #{record.reportId,jdbcType=BIGINT},
      </if>
      <if test="record.relationId != null">
        relation_id = #{record.relationId,jdbcType=BIGINT},
      </if>
      <if test="record.relationType != null">
        relation_type = #{record.relationType,jdbcType=BIT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.reportVersion != null">
        report_version = #{record.reportVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.reportUserPhone != null">
        report_user_phone = #{record.reportUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.beReportedName != null">
        be_reported_name = #{record.beReportedName,jdbcType=VARCHAR},
      </if>
      <if test="record.processStatus != null">
        process_status = #{record.processStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.displayOrder != null">
        display_order = #{record.displayOrder,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createUserName != null">
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateUserName != null">
        update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdate != null">
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cloud_component_report
    set report_id = #{record.reportId,jdbcType=BIGINT},
      relation_id = #{record.relationId,jdbcType=BIGINT},
      relation_type = #{record.relationType,jdbcType=BIT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      report_version = #{record.reportVersion,jdbcType=VARCHAR},
      report_user_phone = #{record.reportUserPhone,jdbcType=VARCHAR},
      be_reported_name = #{record.beReportedName,jdbcType=VARCHAR},
      process_status = #{record.processStatus,jdbcType=VARCHAR},
      display_order = #{record.displayOrder,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sudao.cloud.module.idea.dao.dto.ReportDTO">
    update cloud_component_report
    <set>
      <if test="relationId != null">
        relation_id = #{relationId,jdbcType=BIGINT},
      </if>
      <if test="relationType != null">
        relation_type = #{relationType,jdbcType=BIT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="reportVersion != null">
        report_version = #{reportVersion,jdbcType=VARCHAR},
      </if>
      <if test="reportUserPhone != null">
        report_user_phone = #{reportUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="beReportedName != null">
        be_reported_name = #{beReportedName,jdbcType=VARCHAR},
      </if>
      <if test="processStatus != null">
        process_status = #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="displayOrder != null">
        display_order = #{displayOrder,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserName != null">
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where report_id = #{reportId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sudao.cloud.module.idea.dao.dto.ReportDTO">
    update cloud_component_report
    set relation_id = #{relationId,jdbcType=BIGINT},
      relation_type = #{relationType,jdbcType=BIT},
      parent_id = #{parentId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      report_version = #{reportVersion,jdbcType=VARCHAR},
      report_user_phone = #{reportUserPhone,jdbcType=VARCHAR},
      be_reported_name = #{beReportedName,jdbcType=VARCHAR},
      process_status = #{processStatus,jdbcType=VARCHAR},
      display_order = #{displayOrder,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where report_id = #{reportId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.sudao.cloud.module.idea.dao.dto.ReportDTOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cloud_component_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>